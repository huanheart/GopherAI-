{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Login from '../views/Login.vue';\nimport Register from '../views/Register.vue';\nimport Menu from '../views/Menu.vue';\nimport AIChat from '../views/AIChat.vue';\nimport ImageRecognition from '../views/ImageRecognition.vue';\nconst routes = [{\n  path: '/',\n  redirect: '/login'\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register\n}, {\n  path: '/menu',\n  name: 'Menu',\n  component: Menu,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/ai-chat',\n  name: 'AIChat',\n  component: AIChat,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/image-recognition',\n  name: 'ImageRecognition',\n  component: ImageRecognition,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  if (to.matched.some(record => record.meta.requiresAuth) && !token) {\n    next('/login');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Login","Register","Menu","AIChat","ImageRecognition","routes","path","redirect","name","component","meta","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","token","localStorage","getItem","matched","some","record"],"sources":["/root/GopherAI/GopherAI-/vue-frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport Login from '../views/Login.vue'\nimport Register from '../views/Register.vue'\nimport Menu from '../views/Menu.vue'\nimport AIChat from '../views/AIChat.vue'\nimport ImageRecognition from '../views/ImageRecognition.vue'\n\nconst routes = [\n  {\n    path: '/',\n    redirect: '/login'\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: Login\n  },\n  {\n    path: '/register',\n    name: 'Register',\n    component: Register\n  },\n  {\n    path: '/menu',\n    name: 'Menu',\n    component: Menu,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/ai-chat',\n    name: 'AIChat',\n    component: AIChat,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/image-recognition',\n    name: 'ImageRecognition',\n    component: ImageRecognition,\n    meta: { requiresAuth: true }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token')\n  if (to.matched.some(record => record.meta.requiresAuth) && !token) {\n    next('/login')\n  } else {\n    next()\n  }\n})\n\nexport default router"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,gBAAgB,MAAM,+BAA+B;AAE5D,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,IAAI,EAAE,QAAQ;EACdE,IAAI,EAAE,OAAO;EACbC,SAAS,EAAET;AACb,CAAC,EACD;EACEM,IAAI,EAAE,WAAW;EACjBE,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAER;AACb,CAAC,EACD;EACEK,IAAI,EAAE,OAAO;EACbE,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEP,IAAI;EACfQ,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEL,IAAI,EAAE,UAAU;EAChBE,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEN,MAAM;EACjBO,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEL,IAAI,EAAE,oBAAoB;EAC1BE,IAAI,EAAE,kBAAkB;EACxBC,SAAS,EAAEL,gBAAgB;EAC3BM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,MAAMC,MAAM,GAAGd,YAAY,CAAC;EAC1Be,OAAO,EAAEd,gBAAgB,CAACe,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CX;AACF,CAAC,CAAC;AAEFO,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAAChB,IAAI,CAACC,YAAY,CAAC,IAAI,CAACU,KAAK,EAAE;IACjED,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}