{"ast":null,"code":"import { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport api from '../utils/api';\nexport default {\n  name: 'LoginView',\n  setup() {\n    const router = useRouter();\n    const loginFormRef = ref();\n    const loading = ref(false);\n    const loginForm = ref({\n      username: '',\n      password: ''\n    });\n    const loginRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: '密码长度不能少于6位',\n        trigger: 'blur'\n      }]\n    };\n    const handleLogin = async () => {\n      try {\n        await loginFormRef.value.validate();\n        loading.value = true;\n        const response = await api.post('/user/login', {\n          username: loginForm.value.username,\n          password: loginForm.value.password\n        });\n        if (response.data.status_code === 1000) {\n          localStorage.setItem('token', response.data.token);\n          ElMessage.success('登录成功');\n          router.push('/menu');\n        } else {\n          ElMessage.error(response.data.status_msg || '登录失败');\n        }\n      } catch (error) {\n        console.error('Login error:', error);\n        ElMessage.error('登录失败，请重试');\n      } finally {\n        loading.value = false;\n      }\n    };\n    return {\n      loginFormRef,\n      loading,\n      loginForm,\n      loginRules,\n      handleLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","ElMessage","api","name","setup","router","loginFormRef","loading","loginForm","username","password","loginRules","required","message","trigger","min","handleLogin","value","validate","response","post","data","status_code","localStorage","setItem","token","success","push","error","status_msg","console"],"sources":["/root/GopherAI/GopherAI-/vue-frontend/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <el-card class=\"login-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <h2>登录</h2>\n        </div>\n      </template>\n      <el-form\n        ref=\"loginFormRef\"\n        :model=\"loginForm\"\n        :rules=\"loginRules\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            placeholder=\"请输入用户名\"\n          />\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            placeholder=\"请输入密码\"\n            type=\"password\"\n            show-password\n          />\n        </el-form-item>\n        <el-form-item>\n          <el-button\n            type=\"primary\"\n            :loading=\"loading\"\n            @click=\"handleLogin\"\n            style=\"width: 100%\"\n          >\n            登录\n          </el-button>\n        </el-form-item>\n        <el-form-item>\n          <el-button\n            type=\"text\"\n            @click=\"$router.push('/register')\"\n            style=\"width: 100%\"\n          >\n            还没有账号？去注册\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport api from '../utils/api'\n\nexport default {\n  name: 'LoginView',\n  setup() {\n    const router = useRouter()\n    const loginFormRef = ref()\n    const loading = ref(false)\n    const loginForm = ref({\n      username: '',\n      password: ''\n    })\n\n    const loginRules = {\n      username: [\n        { required: true, message: '请输入用户名', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: '请输入密码', trigger: 'blur' },\n        { min: 6, message: '密码长度不能少于6位', trigger: 'blur' }\n      ]\n    }\n\n    const handleLogin = async () => {\n      try {\n        await loginFormRef.value.validate()\n        loading.value = true\n        const response = await api.post('/user/login', {\n          username: loginForm.value.username,\n          password: loginForm.value.password\n        })\n        if (response.data.status_code === 1000) {\n          localStorage.setItem('token', response.data.token)\n          ElMessage.success('登录成功')\n          router.push('/menu')\n        } else {\n          ElMessage.error(response.data.status_msg || '登录失败')\n        }\n      } catch (error) {\n        console.error('Login error:', error)\n        ElMessage.error('登录失败，请重试')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    return {\n      loginFormRef,\n      loading,\n      loginForm,\n      loginRules,\n      handleLogin\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  position: relative;\n  overflow: hidden;\n}\n\n.login-container::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><circle cx=\"20\" cy=\"20\" r=\"2\" fill=\"rgba(255,255,255,0.1)\"/><circle cx=\"80\" cy=\"80\" r=\"2\" fill=\"rgba(255,255,255,0.1)\"/><circle cx=\"40\" cy=\"60\" r=\"1\" fill=\"rgba(255,255,255,0.1)\"/><circle cx=\"60\" cy=\"30\" r=\"1.5\" fill=\"rgba(255,255,255,0.1)\"/></svg>');\n  animation: float 20s ease-in-out infinite;\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0px) rotate(0deg); }\n  50% { transform: translateY(-20px) rotate(180deg); }\n}\n\n.login-card {\n  width: 420px;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  border-radius: 20px;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  animation: slideIn 0.8s ease-out;\n  position: relative;\n  z-index: 1;\n}\n\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateY(30px) scale(0.9);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n.card-header {\n  text-align: center;\n  padding: 30px 0 20px 0;\n}\n\n.card-header h2 {\n  margin: 0;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  font-size: 28px;\n  font-weight: 600;\n  animation: glow 2s ease-in-out infinite alternate;\n}\n\n@keyframes glow {\n  from { filter: brightness(1); }\n  to { filter: brightness(1.2); }\n}\n\n.el-form-item {\n  margin-bottom: 24px;\n}\n\n.el-input {\n  transition: all 0.3s ease;\n}\n\n.el-input:focus-within {\n  transform: scale(1.02);\n}\n\n.el-button {\n  height: 48px;\n  border-radius: 12px;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n.el-button::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n  transition: left 0.5s;\n}\n\n.el-button:hover::before {\n  left: 100%;\n}\n\n.el-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(64, 158, 255, 0.3);\n}\n\n.login-link {\n  text-align: center;\n  margin-top: 20px;\n  animation: fadeIn 1s ease-out 0.5s both;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n</style>"],"mappings":"AAqDA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,SAAQ,QAAS,cAAa;AACvC,OAAOC,GAAE,MAAO,cAAa;AAE7B,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIL,SAAS,CAAC;IACzB,MAAMM,YAAW,GAAIP,GAAG,CAAC;IACzB,MAAMQ,OAAM,GAAIR,GAAG,CAAC,KAAK;IACzB,MAAMS,SAAQ,GAAIT,GAAG,CAAC;MACpBU,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;IAED,MAAMC,UAAS,GAAI;MACjBF,QAAQ,EAAE,CACR;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,EACtD;MACDJ,QAAQ,EAAE,CACR;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,EACrD;QAAEC,GAAG,EAAE,CAAC;QAAEF,OAAO,EAAE,YAAY;QAAEC,OAAO,EAAE;MAAO;IAErD;IAEA,MAAME,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMV,YAAY,CAACW,KAAK,CAACC,QAAQ,CAAC;QAClCX,OAAO,CAACU,KAAI,GAAI,IAAG;QACnB,MAAME,QAAO,GAAI,MAAMjB,GAAG,CAACkB,IAAI,CAAC,aAAa,EAAE;UAC7CX,QAAQ,EAAED,SAAS,CAACS,KAAK,CAACR,QAAQ;UAClCC,QAAQ,EAAEF,SAAS,CAACS,KAAK,CAACP;QAC5B,CAAC;QACD,IAAIS,QAAQ,CAACE,IAAI,CAACC,WAAU,KAAM,IAAI,EAAE;UACtCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACI,KAAK;UACjDxB,SAAS,CAACyB,OAAO,CAAC,MAAM;UACxBrB,MAAM,CAACsB,IAAI,CAAC,OAAO;QACrB,OAAO;UACL1B,SAAS,CAAC2B,KAAK,CAACT,QAAQ,CAACE,IAAI,CAACQ,UAAS,IAAK,MAAM;QACpD;MACF,EAAE,OAAOD,KAAK,EAAE;QACdE,OAAO,CAACF,KAAK,CAAC,cAAc,EAAEA,KAAK;QACnC3B,SAAS,CAAC2B,KAAK,CAAC,UAAU;MAC5B,UAAU;QACRrB,OAAO,CAACU,KAAI,GAAI,KAAI;MACtB;IACF;IAEA,OAAO;MACLX,YAAY;MACZC,OAAO;MACPC,SAAS;MACTG,UAAU;MACVK;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}