{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport api from '../utils/api';\nexport default {\n  name: 'RegisterView',\n  setup() {\n    const router = useRouter();\n    const registerFormRef = ref();\n    const loading = ref(false);\n    const codeLoading = ref(false);\n    const countdown = ref(0);\n    const registerForm = reactive({\n      email: '',\n      captcha: '',\n      password: '',\n      confirmPassword: ''\n    });\n    const validateConfirmPassword = (rule, value, callback) => {\n      if (value !== registerForm.password) {\n        callback(new Error('两次输入密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    const registerRules = {\n      email: [{\n        required: true,\n        message: '请输入邮箱',\n        trigger: 'blur'\n      }, {\n        type: 'email',\n        message: '请输入正确的邮箱格式',\n        trigger: 'blur'\n      }],\n      captcha: [{\n        required: true,\n        message: '请输入验证码',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: '密码长度不能少于6位',\n        trigger: 'blur'\n      }],\n      confirmPassword: [{\n        required: true,\n        message: '请确认密码',\n        trigger: 'blur'\n      }, {\n        validator: validateConfirmPassword,\n        trigger: 'blur'\n      }]\n    };\n    const sendCode = async () => {\n      if (!registerForm.email) {\n        ElMessage.warning('请先输入邮箱');\n        return;\n      }\n      try {\n        codeLoading.value = true;\n        const response = await api.post('/user/captcha', {\n          email: registerForm.email\n        });\n        if (response.data.status_code === 1000) {\n          ElMessage.success('验证码发送成功');\n          countdown.value = 60;\n          const timer = setInterval(() => {\n            countdown.value--;\n            if (countdown.value <= 0) {\n              clearInterval(timer);\n            }\n          }, 1000);\n        } else {\n          ElMessage.error(response.data.status_msg || '验证码发送失败');\n        }\n      } catch (error) {\n        console.error('Send code error:', error);\n        ElMessage.error('验证码发送失败，请重试');\n      } finally {\n        codeLoading.value = false;\n      }\n    };\n    const handleRegister = async () => {\n      try {\n        await registerFormRef.value.validate();\n        loading.value = true;\n        const response = await api.post('/user/register', {\n          email: registerForm.email,\n          captcha: registerForm.captcha,\n          password: registerForm.password\n        });\n        if (response.data.status_code === 1000) {\n          ElMessage.success('注册成功，请登录');\n          router.push('/login');\n        } else {\n          ElMessage.error(response.data.status_msg || '注册失败');\n        }\n      } catch (error) {\n        console.error('Register error:', error);\n        ElMessage.error('注册失败，请重试');\n      } finally {\n        loading.value = false;\n      }\n    };\n    return {\n      registerFormRef,\n      loading,\n      codeLoading,\n      countdown,\n      registerForm,\n      registerRules,\n      sendCode,\n      handleRegister\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","ElMessage","api","name","setup","router","registerFormRef","loading","codeLoading","countdown","registerForm","email","captcha","password","confirmPassword","validateConfirmPassword","rule","value","callback","Error","registerRules","required","message","trigger","type","min","validator","sendCode","warning","response","post","data","status_code","success","timer","setInterval","clearInterval","error","status_msg","console","handleRegister","validate","push"],"sources":["/root/GopherAI/GopherAI-/vue-frontend/src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"register-container\">\n    <el-card class=\"register-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <h2>注册</h2>\n        </div>\n      </template>\n      <el-form\n        ref=\"registerFormRef\"\n        :model=\"registerForm\"\n        :rules=\"registerRules\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input\n            v-model=\"registerForm.email\"\n            placeholder=\"请输入邮箱\"\n            type=\"email\"\n          />\n        </el-form-item>\n        <el-form-item label=\"验证码\" prop=\"captcha\">\n          <el-row :gutter=\"10\">\n            <el-col :span=\"16\">\n              <el-input\n                v-model=\"registerForm.captcha\"\n                placeholder=\"请输入验证码\"\n              />\n            </el-col>\n            <el-col :span=\"8\">\n              <el-button\n                type=\"primary\"\n                :loading=\"codeLoading\"\n                :disabled=\"countdown > 0\"\n                @click=\"sendCode\"\n                style=\"width: 100%\"\n              >\n                {{ countdown > 0 ? `${countdown}s` : '发送验证码' }}\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input\n            v-model=\"registerForm.password\"\n            placeholder=\"请输入密码\"\n            type=\"password\"\n            show-password\n          />\n        </el-form-item>\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\n          <el-input\n            v-model=\"registerForm.confirmPassword\"\n            placeholder=\"请再次输入密码\"\n            type=\"password\"\n            show-password\n          />\n        </el-form-item>\n        <el-form-item>\n          <el-button\n            type=\"primary\"\n            :loading=\"loading\"\n            @click=\"handleRegister\"\n            style=\"width: 100%\"\n          >\n            注册\n          </el-button>\n        </el-form-item>\n        <el-form-item>\n          <el-button\n            type=\"text\"\n            @click=\"$router.push('/login')\"\n            style=\"width: 100%\"\n          >\n            已有账号？去登录\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport api from '../utils/api'\n\nexport default {\n  name: 'RegisterView',\n  setup() {\n    const router = useRouter()\n    const registerFormRef = ref()\n    const loading = ref(false)\n    const codeLoading = ref(false)\n    const countdown = ref(0)\n\n    const registerForm = reactive({\n      email: '',\n      captcha: '',\n      password: '',\n      confirmPassword: ''\n    })\n\n    const validateConfirmPassword = (rule, value, callback) => {\n      if (value !== registerForm.password) {\n        callback(new Error('两次输入密码不一致'))\n      } else {\n        callback()\n      }\n    }\n\n    const registerRules = {\n      email: [\n        { required: true, message: '请输入邮箱', trigger: 'blur' },\n        { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\n      ],\n      captcha: [\n        { required: true, message: '请输入验证码', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: '请输入密码', trigger: 'blur' },\n        { min: 6, message: '密码长度不能少于6位', trigger: 'blur' }\n      ],\n      confirmPassword: [\n        { required: true, message: '请确认密码', trigger: 'blur' },\n        { validator: validateConfirmPassword, trigger: 'blur' }\n      ]\n    }\n\n    const sendCode = async () => {\n      if (!registerForm.email) {\n        ElMessage.warning('请先输入邮箱')\n        return\n      }\n      try {\n        codeLoading.value = true\n        const response = await api.post('/user/captcha', { email: registerForm.email })\n        if (response.data.status_code === 1000) {\n          ElMessage.success('验证码发送成功')\n          countdown.value = 60\n          const timer = setInterval(() => {\n            countdown.value--\n            if (countdown.value <= 0) {\n              clearInterval(timer)\n            }\n          }, 1000)\n        } else {\n          ElMessage.error(response.data.status_msg || '验证码发送失败')\n        }\n      } catch (error) {\n        console.error('Send code error:', error)\n        ElMessage.error('验证码发送失败，请重试')\n      } finally {\n        codeLoading.value = false\n      }\n    }\n\n    const handleRegister = async () => {\n      try {\n        await registerFormRef.value.validate()\n        loading.value = true\n        const response = await api.post('/user/register', {\n              email: registerForm.email,\n              captcha: registerForm.captcha,\n              password: registerForm.password\n        })\n        if (response.data.status_code === 1000) {\n          ElMessage.success('注册成功，请登录')\n          router.push('/login')\n        } else {\n          ElMessage.error(response.data.status_msg || '注册失败')\n        }\n      } catch (error) {\n        console.error('Register error:', error)\n        ElMessage.error('注册失败，请重试')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    return {\n      registerFormRef,\n      loading,\n      codeLoading,\n      countdown,\n      registerForm,\n      registerRules,\n      sendCode,\n      handleRegister\n    }\n  }\n}\n</script>\n\n<style scoped>\n.register-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  position: relative;\n  overflow: hidden;\n}\n\n.register-container::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><circle cx=\"20\" cy=\"20\" r=\"2\" fill=\"rgba(255,255,255,0.1)\"/><circle cx=\"80\" cy=\"80\" r=\"2\" fill=\"rgba(255,255,255,0.1)\"/><circle cx=\"40\" cy=\"60\" r=\"1\" fill=\"rgba(255,255,255,0.1)\"/><circle cx=\"60\" cy=\"30\" r=\"1.5\" fill=\"rgba(255,255,255,0.1)\"/></svg>');\n  animation: float 20s ease-in-out infinite;\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0px) rotate(0deg); }\n  50% { transform: translateY(-20px) rotate(180deg); }\n}\n\n.register-card {\n  width: 420px;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  border-radius: 20px;\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  animation: slideIn 0.8s ease-out;\n  position: relative;\n  z-index: 1;\n}\n\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateY(30px) scale(0.9);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n.card-header {\n  text-align: center;\n  padding: 30px 0 20px 0;\n}\n\n.card-header h2 {\n  margin: 0;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n  font-size: 28px;\n  font-weight: 600;\n  animation: glow 2s ease-in-out infinite alternate;\n}\n\n@keyframes glow {\n  from { filter: brightness(1); }\n  to { filter: brightness(1.2); }\n}\n\n.el-form-item {\n  margin-bottom: 20px;\n}\n\n.el-input {\n  transition: all 0.3s ease;\n}\n\n.el-input:focus-within {\n  transform: scale(1.02);\n}\n\n.el-row {\n  animation: fadeIn 0.6s ease-out 0.3s both;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.el-button {\n  height: 44px;\n  border-radius: 12px;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n.el-button::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n  transition: left 0.5s;\n}\n\n.el-button:hover::before {\n  left: 100%;\n}\n\n.el-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(64, 158, 255, 0.3);\n}\n\n.register-link {\n  text-align: center;\n  margin-top: 20px;\n  animation: fadeIn 1s ease-out 0.5s both;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}