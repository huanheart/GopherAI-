{"ast":null,"code":"import { ref } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { UploadFilled } from '@element-plus/icons-vue';\nimport api from '../utils/api';\nexport default {\n  name: 'ImageRecognition',\n  components: {\n    UploadFilled\n  },\n  setup() {\n    const uploadRef = ref();\n    const result = ref('');\n    const imageUrl = ref('');\n    const uploadAction = ref(`${api.defaults.baseURL}/image/recognize`);\n    const uploadHeaders = ref({\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    });\n    const beforeUpload = file => {\n      const isImage = file.type.startsWith('image/');\n      const isLt10M = file.size / 1024 / 1024 < 10;\n      if (!isImage) {\n        ElMessage.error('只能上传图片文件!');\n        return false;\n      }\n      if (!isLt10M) {\n        ElMessage.error('上传图片大小不能超过 10MB!');\n        return false;\n      }\n      return true;\n    };\n    const handleUploadSuccess = (response, file) => {\n      if (response.status_code === 1000) {\n        result.value = response.result;\n        imageUrl.value = URL.createObjectURL(file.raw);\n        ElMessage.success('识别成功!');\n      } else {\n        ElMessage.error(response.status_msg || '识别失败');\n      }\n    };\n    const handleUploadError = error => {\n      console.error('Upload error:', error);\n      ElMessage.error('上传失败，请重试');\n    };\n    return {\n      uploadRef,\n      result,\n      imageUrl,\n      uploadAction,\n      uploadHeaders,\n      beforeUpload,\n      handleUploadSuccess,\n      handleUploadError\n    };\n  }\n};","map":{"version":3,"names":["ref","ElMessage","UploadFilled","api","name","components","setup","uploadRef","result","imageUrl","uploadAction","defaults","baseURL","uploadHeaders","Authorization","localStorage","getItem","beforeUpload","file","isImage","type","startsWith","isLt10M","size","error","handleUploadSuccess","response","status_code","value","URL","createObjectURL","raw","success","status_msg","handleUploadError","console"],"sources":["/root/GopherAI/GopherAI-/vue-frontend/src/views/ImageRecognition.vue"],"sourcesContent":["<template>\n  <div class=\"image-recognition-container\">\n    <el-header class=\"header\">\n      <el-button type=\"primary\" @click=\"$router.push('/menu')\">返回菜单</el-button>\n      <h2>图像识别</h2>\n    </el-header>\n    <el-main class=\"main\">\n      <div class=\"upload-section\">\n        <el-upload\n          ref=\"uploadRef\"\n          class=\"upload-demo\"\n          drag\n          :action=\"uploadAction\"\n          :headers=\"uploadHeaders\"\n          :on-success=\"handleUploadSuccess\"\n          :on-error=\"handleUploadError\"\n          :before-upload=\"beforeUpload\"\n          :show-file-list=\"false\"\n          accept=\"image/*\"\n        >\n          <el-icon class=\"el-icon--upload\"><upload-filled /></el-icon>\n          <div class=\"el-upload__text\">\n            将图片拖到此处，或<em>点击上传</em>\n          </div>\n          <template #tip>\n            <div class=\"el-upload__tip\">只能上传jpg/png文件，且不超过10MB</div>\n          </template>\n        </el-upload>\n      </div>\n      <div v-if=\"result\" class=\"result-section\">\n        <el-card class=\"result-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>识别结果</span>\n            </div>\n          </template>\n          <div class=\"result-content\">\n            <img :src=\"imageUrl\" alt=\"上传的图片\" class=\"uploaded-image\" />\n            <div class=\"recognition-result\">\n              <h3>识别内容：</h3>\n              <p>{{ result }}</p>\n            </div>\n          </div>\n        </el-card>\n      </div>\n    </el-main>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport { UploadFilled } from '@element-plus/icons-vue'\nimport api from '../utils/api'\n\nexport default {\n  name: 'ImageRecognition',\n  components: {\n    UploadFilled\n  },\n  setup() {\n    const uploadRef = ref()\n    const result = ref('')\n    const imageUrl = ref('')\n    const uploadAction = ref(`${api.defaults.baseURL}/image/recognize`)\n    const uploadHeaders = ref({\n      Authorization: `Bearer ${localStorage.getItem('token')}`\n    })\n\n    const beforeUpload = (file) => {\n      const isImage = file.type.startsWith('image/')\n      const isLt10M = file.size / 1024 / 1024 < 10\n\n      if (!isImage) {\n        ElMessage.error('只能上传图片文件!')\n        return false\n      }\n      if (!isLt10M) {\n        ElMessage.error('上传图片大小不能超过 10MB!')\n        return false\n      }\n      return true\n    }\n\n    const handleUploadSuccess = (response, file) => {\n      if (response.status_code === 1000) {\n        result.value = response.result\n        imageUrl.value = URL.createObjectURL(file.raw)\n        ElMessage.success('识别成功!')\n      } else {\n        ElMessage.error(response.status_msg || '识别失败')\n      }\n    }\n\n    const handleUploadError = (error) => {\n      console.error('Upload error:', error)\n      ElMessage.error('上传失败，请重试')\n    }\n\n    return {\n      uploadRef,\n      result,\n      imageUrl,\n      uploadAction,\n      uploadHeaders,\n      beforeUpload,\n      handleUploadSuccess,\n      handleUploadError\n    }\n  }\n}\n</script>\n\n<style scoped>\n.image-recognition-container {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n}\n\n.header {\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  color: #2c3e50;\n  display: flex;\n  align-items: center;\n  padding: 0 30px;\n  box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  position: relative;\n  z-index: 2;\n}\n\n.header h2 {\n  margin: 0 0 0 20px;\n  font-size: 24px;\n  font-weight: 600;\n  background: linear-gradient(135deg, #67c23a 0%, #409eff 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.el-button {\n  transition: all 0.3s ease;\n}\n\n.el-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(64, 158, 255, 0.3);\n}\n\n.main {\n  flex: 1;\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  position: relative;\n}\n\n.upload-section {\n  width: 100%;\n  max-width: 700px;\n  margin-bottom: 40px;\n  animation: uploadFadeIn 0.8s ease-out;\n}\n\n@keyframes uploadFadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.upload-demo {\n  width: 100%;\n}\n\n.upload-demo :deep(.el-upload-dragger) {\n  border: 2px dashed #d9d9d9;\n  border-radius: 20px;\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n.upload-demo :deep(.el-upload-dragger)::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(135deg, rgba(102, 126, 234, 0.05) 0%, rgba(103, 194, 58, 0.05) 100%);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.upload-demo :deep(.el-upload-dragger:hover)::before {\n  opacity: 1;\n}\n\n.upload-demo :deep(.el-upload-dragger:hover) {\n  border-color: #409eff;\n  box-shadow: 0 8px 30px rgba(64, 158, 255, 0.2);\n  transform: translateY(-5px);\n}\n\n.upload-demo :deep(.el-upload-dragger .el-icon) {\n  color: #c0c4cc;\n  font-size: 48px;\n  margin-bottom: 16px;\n  transition: all 0.3s ease;\n}\n\n.upload-demo :deep(.el-upload-dragger:hover .el-icon) {\n  color: #409eff;\n  transform: scale(1.1);\n}\n\n.upload-demo :deep(.el-upload__text) {\n  color: #606266;\n  font-size: 16px;\n  margin-bottom: 8px;\n  transition: color 0.3s ease;\n}\n\n.upload-demo :deep(.el-upload-dragger:hover .el-upload__text) {\n  color: #409eff;\n}\n\n.upload-demo :deep(.el-upload__tip) {\n  color: #909399;\n  font-size: 14px;\n}\n\n.result-section {\n  width: 100%;\n  max-width: 900px;\n  animation: resultSlideIn 0.6s ease-out;\n}\n\n@keyframes resultSlideIn {\n  from {\n    opacity: 0;\n    transform: translateY(50px) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n.result-card {\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(15px);\n  border-radius: 20px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  overflow: hidden;\n}\n\n.card-header {\n  font-weight: 600;\n  color: #409eff;\n  font-size: 18px;\n  text-align: center;\n  padding: 20px;\n  background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(103, 194, 58, 0.1) 100%);\n}\n\n.result-content {\n  display: flex;\n  gap: 40px;\n  align-items: flex-start;\n  padding: 30px;\n}\n\n.uploaded-image {\n  max-width: 350px;\n  max-height: 350px;\n  border-radius: 16px;\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);\n  transition: all 0.3s ease;\n  position: relative;\n  overflow: hidden;\n}\n\n.uploaded-image:hover {\n  transform: scale(1.05);\n  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.2);\n}\n\n.uploaded-image::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(103, 194, 58, 0.1) 100%);\n  opacity: 0;\n  transition: opacity 0.3s ease;\n}\n\n.uploaded-image:hover::before {\n  opacity: 1;\n}\n\n.recognition-result {\n  flex: 1;\n  background: rgba(255, 255, 255, 0.8);\n  backdrop-filter: blur(10px);\n  border-radius: 12px;\n  padding: 25px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.recognition-result h3 {\n  margin: 0 0 20px 0;\n  color: #2c3e50;\n  font-size: 20px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n}\n\n.recognition-result h3::before {\n  content: '🎯';\n  margin-right: 10px;\n  font-size: 24px;\n}\n\n.recognition-result p {\n  line-height: 1.7;\n  color: #34495e;\n  font-size: 16px;\n  white-space: pre-wrap;\n  margin: 0;\n  animation: textFadeIn 1s ease-out 0.3s both;\n}\n\n@keyframes textFadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n</style>"],"mappings":"AAkDA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,SAAQ,QAAS,cAAa;AACvC,SAASC,YAAW,QAAS,yBAAwB;AACrD,OAAOC,GAAE,MAAO,cAAa;AAE7B,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIP,GAAG,CAAC;IACtB,MAAMQ,MAAK,GAAIR,GAAG,CAAC,EAAE;IACrB,MAAMS,QAAO,GAAIT,GAAG,CAAC,EAAE;IACvB,MAAMU,YAAW,GAAIV,GAAG,CAAC,GAAGG,GAAG,CAACQ,QAAQ,CAACC,OAAO,kBAAkB;IAClE,MAAMC,aAAY,GAAIb,GAAG,CAAC;MACxBc,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACxD,CAAC;IAED,MAAMC,YAAW,GAAKC,IAAI,IAAK;MAC7B,MAAMC,OAAM,GAAID,IAAI,CAACE,IAAI,CAACC,UAAU,CAAC,QAAQ;MAC7C,MAAMC,OAAM,GAAIJ,IAAI,CAACK,IAAG,GAAI,IAAG,GAAI,IAAG,GAAI,EAAC;MAE3C,IAAI,CAACJ,OAAO,EAAE;QACZlB,SAAS,CAACuB,KAAK,CAAC,WAAW;QAC3B,OAAO,KAAI;MACb;MACA,IAAI,CAACF,OAAO,EAAE;QACZrB,SAAS,CAACuB,KAAK,CAAC,kBAAkB;QAClC,OAAO,KAAI;MACb;MACA,OAAO,IAAG;IACZ;IAEA,MAAMC,mBAAkB,GAAIA,CAACC,QAAQ,EAAER,IAAI,KAAK;MAC9C,IAAIQ,QAAQ,CAACC,WAAU,KAAM,IAAI,EAAE;QACjCnB,MAAM,CAACoB,KAAI,GAAIF,QAAQ,CAAClB,MAAK;QAC7BC,QAAQ,CAACmB,KAAI,GAAIC,GAAG,CAACC,eAAe,CAACZ,IAAI,CAACa,GAAG;QAC7C9B,SAAS,CAAC+B,OAAO,CAAC,OAAO;MAC3B,OAAO;QACL/B,SAAS,CAACuB,KAAK,CAACE,QAAQ,CAACO,UAAS,IAAK,MAAM;MAC/C;IACF;IAEA,MAAMC,iBAAgB,GAAKV,KAAK,IAAK;MACnCW,OAAO,CAACX,KAAK,CAAC,eAAe,EAAEA,KAAK;MACpCvB,SAAS,CAACuB,KAAK,CAAC,UAAU;IAC5B;IAEA,OAAO;MACLjB,SAAS;MACTC,MAAM;MACNC,QAAQ;MACRC,YAAY;MACZG,aAAa;MACbI,YAAY;MACZQ,mBAAmB;MACnBS;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}