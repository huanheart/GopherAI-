{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, withKeys as _withKeys } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ai-chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-messages\",\n  ref: \"messagesRef\"\n};\nconst _hoisted_3 = {\n  class: \"message-content\"\n};\nconst _hoisted_4 = {\n  class: \"chat-input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_header = _resolveComponent(\"el-header\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_main = _resolveComponent(\"el-main\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_header, {\n    class: \"header\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/menu'))\n    }, {\n      default: _withCtx(() => [...(_cache[2] || (_cache[2] = [_createTextVNode(\"返回菜单\", -1 /* CACHED */)]))]),\n      _: 1 /* STABLE */\n    }), _cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"AI聊天\", -1 /* CACHED */))]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_el_main, {\n    class: \"main\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, (message, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        class: _normalizeClass(['message', message.role === 'user' ? 'user-message' : 'ai-message'])\n      }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, _toDisplayString(message.content), 1 /* TEXT */)])], 2 /* CLASS */);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_input, {\n      modelValue: $setup.inputMessage,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.inputMessage = $event),\n      placeholder: \"输入您的问题...\",\n      onKeyup: _withKeys($setup.sendMessage, [\"enter\"]),\n      disabled: $setup.loading\n    }, {\n      suffix: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        loading: $setup.loading,\n        onClick: $setup.sendMessage,\n        icon: \"Send\"\n      }, {\n        default: _withCtx(() => [...(_cache[4] || (_cache[4] = [_createTextVNode(\" 发送 \", -1 /* CACHED */)]))]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\", \"onClick\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\", \"onKeyup\", \"disabled\"])])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createVNode","_component_el_header","_component_el_button","type","onClick","_cache","$event","_ctx","$router","push","_createElementVNode","_component_el_main","_hoisted_2","_Fragment","_renderList","$setup","messages","message","index","key","_normalizeClass","role","_hoisted_3","_toDisplayString","content","_hoisted_4","_component_el_input","inputMessage","placeholder","onKeyup","_withKeys","sendMessage","disabled","loading","suffix","_withCtx","icon"],"sources":["/root/GopherAI/GopherAI-/vue-frontend/src/views/AIChat.vue"],"sourcesContent":["<template>\n  <div class=\"ai-chat-container\">\n    <el-header class=\"header\">\n      <el-button type=\"primary\" @click=\"$router.push('/menu')\">返回菜单</el-button>\n      <h2>AI聊天</h2>\n    </el-header>\n    <el-main class=\"main\">\n      <div class=\"chat-messages\" ref=\"messagesRef\">\n        <div\n          v-for=\"(message, index) in messages\"\n          :key=\"index\"\n          :class=\"['message', message.role === 'user' ? 'user-message' : 'ai-message']\"\n        >\n          <div class=\"message-content\">\n            <p>{{ message.content }}</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"chat-input\">\n        <el-input\n          v-model=\"inputMessage\"\n          placeholder=\"输入您的问题...\"\n          @keyup.enter=\"sendMessage\"\n          :disabled=\"loading\"\n        >\n          <template #suffix>\n            <el-button\n              type=\"primary\"\n              :loading=\"loading\"\n              @click=\"sendMessage\"\n              icon=\"Send\"\n            >\n              发送\n            </el-button>\n          </template>\n        </el-input>\n      </div>\n    </el-main>\n  </div>\n</template>\n\n<script>\nimport { ref, nextTick } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport api from '../utils/api'\n\nexport default {\n  name: 'AIChat',\n  setup() {\n    const messages = ref([])\n    const inputMessage = ref('')\n    const loading = ref(false)\n    const messagesRef = ref()\n\n    const sendMessage = async () => {\n      if (!inputMessage.value.trim()) {\n        ElMessage.warning('请输入消息内容')\n        return\n      }\n\n      const userMessage = {\n        role: 'user',\n        content: inputMessage.value\n      }\n      messages.value.push(userMessage)\n      const currentInput = inputMessage.value\n      inputMessage.value = ''\n\n      try {\n        loading.value = true\n        const response = await api.post('/ai/chat', { message: currentInput })\n        if (response.data.code === 1000) {\n          const aiMessage = {\n            role: 'ai',\n            content: response.data.response\n          }\n          messages.value.push(aiMessage)\n          await nextTick()\n          scrollToBottom()\n        } else {\n          ElMessage.error(response.data.message || '发送失败')\n        }\n      } catch (error) {\n        console.error('Send message error:', error)\n        ElMessage.error('发送失败，请重试')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    const scrollToBottom = () => {\n      if (messagesRef.value) {\n        messagesRef.value.scrollTop = messagesRef.value.scrollHeight\n      }\n    }\n\n    return {\n      messages,\n      inputMessage,\n      loading,\n      messagesRef,\n      sendMessage\n    }\n  }\n}\n</script>\n\n<style scoped>\n.ai-chat-container {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n}\n\n.header {\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  color: #2c3e50;\n  display: flex;\n  align-items: center;\n  padding: 0 30px;\n  box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  position: relative;\n  z-index: 2;\n}\n\n.header h2 {\n  margin: 0 0 0 20px;\n  font-size: 24px;\n  font-weight: 600;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.el-button {\n  transition: all 0.3s ease;\n}\n\n.el-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(64, 158, 255, 0.3);\n}\n\n.main {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n}\n\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  scroll-behavior: smooth;\n}\n\n.chat-messages::-webkit-scrollbar {\n  width: 6px;\n}\n\n.chat-messages::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 3px;\n}\n\n.chat-messages::-webkit-scrollbar-thumb {\n  background: rgba(102, 126, 234, 0.3);\n  border-radius: 3px;\n}\n\n.chat-messages::-webkit-scrollbar-thumb:hover {\n  background: rgba(102, 126, 234, 0.5);\n}\n\n.message {\n  max-width: 70%;\n  padding: 16px 20px;\n  border-radius: 20px;\n  word-wrap: break-word;\n  animation: messageSlideIn 0.4s ease-out;\n  position: relative;\n}\n\n@keyframes messageSlideIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n.user-message {\n  align-self: flex-end;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  box-shadow: 0 4px 20px rgba(102, 126, 234, 0.3);\n  position: relative;\n}\n\n.user-message::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  right: 20px;\n  width: 0;\n  height: 0;\n  border-left: 8px solid transparent;\n  border-right: 8px solid transparent;\n  border-top: 8px solid #764ba2;\n}\n\n.ai-message {\n  align-self: flex-start;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  color: #2c3e50;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  position: relative;\n}\n\n.ai-message::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  left: 20px;\n  width: 0;\n  height: 0;\n  border-left: 8px solid transparent;\n  border-right: 8px solid transparent;\n  border-top: 8px solid rgba(255, 255, 255, 0.95);\n}\n\n.message-content p {\n  margin: 0;\n  line-height: 1.6;\n  font-size: 15px;\n}\n\n.chat-input {\n  padding: 30px;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  position: relative;\n}\n\n.el-input {\n  border-radius: 25px;\n  overflow: hidden;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.el-input:hover {\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);\n}\n\n.el-input:focus-within {\n  box-shadow: 0 8px 30px rgba(102, 126, 234, 0.2);\n  transform: translateY(-2px);\n}\n\n.el-input__inner {\n  border: none;\n  border-radius: 25px;\n  padding: 0 20px;\n  height: 50px;\n  font-size: 16px;\n}\n\n.el-input__inner:focus {\n  box-shadow: none;\n}\n\n.el-input__suffix {\n  right: 8px;\n}\n\n.el-button {\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  padding: 0;\n  border: none;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  transition: all 0.3s ease;\n}\n\n.el-button:hover {\n  transform: scale(1.1);\n  box-shadow: 0 4px 20px rgba(102, 126, 234, 0.4);\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAmB;;EAMrBA,KAAK,EAAC,eAAe;EAACC,GAAG,EAAC;;;EAMtBD,KAAK,EAAC;AAAiB;;EAK3BA,KAAK,EAAC;AAAY;;;;;;uBAjB3BE,mBAAA,CAqCM,OArCNC,UAqCM,GApCJC,YAAA,CAGYC,oBAAA;IAHDL,KAAK,EAAC;EAAQ;sBACvB,MAAyE,CAAzEI,YAAA,CAAyEE,oBAAA;MAA9DC,IAAI,EAAC,SAAS;MAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;;wBAAW,MAAI,KAAAJ,MAAA,QAAAA,MAAA,O,iBAAJ,MAAI,mB;;kCAC7DK,mBAAA,CAAa,YAAT,MAAI,oB;;MAEVV,YAAA,CA+BUW,kBAAA;IA/BDf,KAAK,EAAC;EAAM;sBACnB,MAUM,CAVNc,mBAAA,CAUM,OAVNE,UAUM,I,kBATJd,mBAAA,CAQMe,SAAA,QAAAC,WAAA,CAPuBC,MAAA,CAAAC,QAAQ,GAA3BC,OAAO,EAAEC,KAAK;2BADxBpB,mBAAA,CAQM;QANHqB,GAAG,EAAED,KAAK;QACVtB,KAAK,EAAAwB,eAAA,aAAcH,OAAO,CAACI,IAAI;UAEhCX,mBAAA,CAEM,OAFNY,UAEM,GADJZ,mBAAA,CAA4B,WAAAa,gBAAA,CAAtBN,OAAO,CAACO,OAAO,iB;4DAI3Bd,mBAAA,CAkBM,OAlBNe,UAkBM,GAjBJzB,YAAA,CAgBW0B,mBAAA;kBAfAX,MAAA,CAAAY,YAAY;iEAAZZ,MAAA,CAAAY,YAAY,GAAArB,MAAA;MACrBsB,WAAW,EAAC,WAAW;MACtBC,OAAK,EAAAC,SAAA,CAAQf,MAAA,CAAAgB,WAAW;MACxBC,QAAQ,EAAEjB,MAAA,CAAAkB;;MAEAC,MAAM,EAAAC,QAAA,CACf,MAOY,CAPZnC,YAAA,CAOYE,oBAAA;QANVC,IAAI,EAAC,SAAS;QACb8B,OAAO,EAAElB,MAAA,CAAAkB,OAAO;QAChB7B,OAAK,EAAEW,MAAA,CAAAgB,WAAW;QACnBK,IAAI,EAAC;;0BACN,MAED,KAAA/B,MAAA,QAAAA,MAAA,O,iBAFC,MAED,mB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}