{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"image-recognition-container\"\n};\nconst _hoisted_2 = {\n  class: \"top-bar\"\n};\nconst _hoisted_3 = {\n  class: \"chat-container\",\n  ref: \"chatContainerRef\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"back-btn\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/menu'))\n  }, \"← 返回\"), _cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"AI 图像识别助手\", -1 /* CACHED */))]), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.role === 'user' ? 'user' : 'assistant'])\n    }, [_createElementVNode(\"b\", null, _toDisplayString(message.role === 'user' ? '你' : 'AI') + \":\", 1 /* TEXT */), _createElementVNode(\"span\", null, _toDisplayString(message.content), 1 /* TEXT */), message.imageUrl ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: message.imageUrl,\n      alt: \"上传的图片\"\n    }, null, 8 /* PROPS */, _hoisted_4)) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"form\", {\n    class: \"input-box\",\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $setup.handleSubmit && $setup.handleSubmit(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"input\", {\n    ref: \"fileInputRef\",\n    type: \"file\",\n    accept: \"image/*\",\n    required: \"\",\n    onChange: _cache[1] || (_cache[1] = (...args) => $setup.handleFileSelect && $setup.handleFileSelect(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: !$setup.selectedFile\n  }, \"发送图片\", 8 /* PROPS */, _hoisted_5)], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","$event","_ctx","$router","push","_hoisted_3","_Fragment","_renderList","$setup","messages","message","index","key","_normalizeClass","role","_toDisplayString","content","imageUrl","src","alt","onSubmit","_withModifiers","args","handleSubmit","type","accept","required","onChange","handleFileSelect","disabled","selectedFile","_hoisted_5"],"sources":["/root/GopherAI/GopherAI-/vue-frontend/src/views/ImageRecognition.vue"],"sourcesContent":["<template>\n  <div class=\"image-recognition-container\">\n    <div class=\"top-bar\">\n      <button class=\"back-btn\" @click=\"$router.push('/menu')\">← 返回</button>\n      <h2>AI 图像识别助手</h2>\n    </div>\n\n    <div class=\"chat-container\" ref=\"chatContainerRef\">\n      <div\n        v-for=\"(message, index) in messages\"\n        :key=\"index\"\n        :class=\"['message', message.role === 'user' ? 'user' : 'assistant']\"\n      >\n        <b>{{ message.role === 'user' ? '你' : 'AI' }}:</b>\n        <span>{{ message.content }}</span>\n        <img v-if=\"message.imageUrl\" :src=\"message.imageUrl\" alt=\"上传的图片\" />\n      </div>\n    </div>\n\n    <form class=\"input-box\" @submit.prevent=\"handleSubmit\">\n      <input\n        ref=\"fileInputRef\"\n        type=\"file\"\n        accept=\"image/*\"\n        required\n        @change=\"handleFileSelect\"\n      />\n      <button type=\"submit\" :disabled=\"!selectedFile\">发送图片</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref, nextTick } from 'vue'\nimport api from '../utils/api'\n\nexport default {\n  name: 'ImageRecognition',\n  setup() {\n    const messages = ref([])\n    const selectedFile = ref(null)\n    const fileInputRef = ref()\n    const chatContainerRef = ref()\n\n    const handleFileSelect = (event) => {\n      selectedFile.value = event.target.files[0]\n    }\n\n    const handleSubmit = async () => {\n      if (!selectedFile.value) return\n\n      const file = selectedFile.value\n      const reader = new FileReader()\n\n      reader.onload = async function(event) {\n        const base64Url = event.target.result\n        const base64Data = base64Url.split(',')[1]\n\n        // 添加用户消息\n        messages.value.push({\n          role: 'user',\n          content: `已上传图片: ${file.name}`,\n          imageUrl: base64Url\n        })\n\n        await nextTick()\n        scrollToBottom()\n\n        try {\n          const response = await api.post('/upload/send', {\n            filename: file.name,\n            image: base64Data\n          })\n\n          if (response.data.status_code === 1000) {\n            const aiText = `识别结果: ${response.data.class_name} (置信度: ${Math.round(response.data.confidence * 100)}%)`\n            messages.value.push({\n              role: 'assistant',\n              content: aiText\n            })\n          } else {\n            messages.value.push({\n              role: 'assistant',\n              content: `[错误] ${response.data.status_msg || '识别失败'}`\n            })\n          }\n        } catch (error) {\n          console.error('Upload error:', error)\n          messages.value.push({\n            role: 'assistant',\n            content: `[错误] 无法连接到服务器或上传失败: ${error.message}`\n          })\n        }\n\n        await nextTick()\n        scrollToBottom()\n\n        // 清空文件输入\n        selectedFile.value = null\n        if (fileInputRef.value) {\n          fileInputRef.value.value = ''\n        }\n      }\n\n      reader.readAsDataURL(file)\n    }\n\n    const scrollToBottom = () => {\n      if (chatContainerRef.value) {\n        chatContainerRef.value.scrollTop = chatContainerRef.value.scrollHeight\n      }\n    }\n\n    return {\n      messages,\n      selectedFile,\n      fileInputRef,\n      chatContainerRef,\n      handleFileSelect,\n      handleSubmit\n    }\n  }\n}\n</script>\n\n<style scoped>\n.image-recognition-container {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  position: relative;\n  overflow: hidden;\n}\n\n.image-recognition-container::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><circle cx=\"20\" cy=\"20\" r=\"2\" fill=\"rgba(255,255,255,0.1)\"/><circle cx=\"80\" cy=\"80\" r=\"2\" fill=\"rgba(255,255,255,0.1)\"/><circle cx=\"40\" cy=\"60\" r=\"1\" fill=\"rgba(255,255,255,0.1)\"/><circle cx=\"60\" cy=\"30\" r=\"1.5\" fill=\"rgba(255,255,255,0.1)\"/></svg>');\n  animation: float 20s ease-in-out infinite;\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0px) rotate(0deg); }\n  50% { transform: translateY(-20px) rotate(180deg); }\n}\n\n.top-bar {\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  color: white;\n  display: flex;\n  align-items: center;\n  padding: 0 30px;\n  box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  position: relative;\n  z-index: 2;\n}\n\n.back-btn {\n  background: rgba(255, 255, 255, 0.2);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  color: white;\n  padding: 10px 20px;\n  border-radius: 12px;\n  cursor: pointer;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n}\n\n.back-btn:hover {\n  background: rgba(255, 255, 255, 0.3);\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);\n}\n\n.top-bar h2 {\n  margin: 0 0 0 20px;\n  font-size: 24px;\n  font-weight: 600;\n  background: linear-gradient(135deg, #ffffff 0%, rgba(255,255,255,0.8) 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.chat-container {\n  flex: 1;\n  overflow-y: auto;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  position: relative;\n  z-index: 1;\n}\n\n.chat-container::-webkit-scrollbar {\n  width: 6px;\n}\n\n.chat-container::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 3px;\n}\n\n.chat-container::-webkit-scrollbar-thumb {\n  background: rgba(102, 126, 234, 0.3);\n  border-radius: 3px;\n}\n\n.chat-container::-webkit-scrollbar-thumb:hover {\n  background: rgba(102, 126, 234, 0.5);\n}\n\n.message {\n  max-width: 70%;\n  padding: 16px 20px;\n  border-radius: 20px;\n  line-height: 1.6;\n  word-wrap: break-word;\n  position: relative;\n  animation: messageSlideIn 0.4s ease-out;\n  font-size: 15px;\n}\n\n@keyframes messageSlideIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n.user {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  align-self: flex-end;\n  box-shadow: 0 4px 20px rgba(102, 126, 234, 0.3);\n  position: relative;\n}\n\n.user::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  right: 20px;\n  width: 0;\n  height: 0;\n  border-left: 8px solid transparent;\n  border-right: 8px solid transparent;\n  border-top: 8px solid #764ba2;\n}\n\n.assistant {\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  color: #2c3e50;\n  align-self: flex-start;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  position: relative;\n}\n\n.assistant::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  left: 20px;\n  width: 0;\n  height: 0;\n  border-left: 8px solid transparent;\n  border-right: 8px solid transparent;\n  border-top: 8px solid rgba(255, 255, 255, 0.95);\n}\n\n.message b {\n  font-weight: 600;\n  margin-right: 8px;\n}\n\n.message img {\n  max-width: 250px;\n  border-radius: 12px;\n  display: block;\n  margin-top: 12px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n}\n\n.message img:hover {\n  transform: scale(1.05);\n}\n\n.input-box {\n  display: flex;\n  padding: 30px;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  gap: 20px;\n  position: relative;\n  z-index: 1;\n}\n\n.input-box input[type=\"file\"] {\n  flex: 1;\n  border: 2px dashed #d9d9d9;\n  border-radius: 12px;\n  padding: 15px 20px;\n  background: rgba(255, 255, 255, 0.8);\n  color: #666;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-size: 14px;\n}\n\n.input-box input[type=\"file\"]:hover {\n  border-color: #409eff;\n  background: rgba(64, 158, 255, 0.05);\n}\n\n.input-box input[type=\"file\"]::file-selector-button {\n  border: none;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  padding: 8px 16px;\n  border-radius: 8px;\n  color: white;\n  cursor: pointer;\n  font-weight: 600;\n  margin-right: 12px;\n  transition: all 0.3s ease;\n  box-shadow: 0 2px 10px rgba(102, 126, 234, 0.3);\n}\n\n.input-box input[type=\"file\"]::file-selector-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);\n}\n\n.input-box button {\n  padding: 15px 30px;\n  border: none;\n  border-radius: 12px;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n}\n\n.input-box button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);\n}\n\n.input-box button:disabled {\n  background: #ccc;\n  box-shadow: none;\n  cursor: not-allowed;\n  transform: none;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAA6B;;EACjCA,KAAK,EAAC;AAAS;;EAKfA,KAAK,EAAC,gBAAgB;EAACC,GAAG,EAAC;;;;;uBANlCC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,mBAAA,CAGM,OAHNC,UAGM,GAFJD,mBAAA,CAAqE;IAA7DJ,KAAK,EAAC,UAAU;IAAEM,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;KAAW,MAAI,G,0BAC5DP,mBAAA,CAAkB,YAAd,WAAS,oB,GAGfA,mBAAA,CAUM,OAVNQ,UAUM,I,kBATJV,mBAAA,CAQMW,SAAA,QAAAC,WAAA,CAPuBC,MAAA,CAAAC,QAAQ,GAA3BC,OAAO,EAAEC,KAAK;yBADxBhB,mBAAA,CAQM;MANHiB,GAAG,EAAED,KAAK;MACVlB,KAAK,EAAAoB,eAAA,aAAcH,OAAO,CAACI,IAAI;QAEhCjB,mBAAA,CAAkD,WAAAkB,gBAAA,CAA5CL,OAAO,CAACI,IAAI,4BAA2B,GAAC,iBAC9CjB,mBAAA,CAAkC,cAAAkB,gBAAA,CAAzBL,OAAO,CAACM,OAAO,kBACbN,OAAO,CAACO,QAAQ,I,cAA3BtB,mBAAA,CAAmE;;MAArCuB,GAAG,EAAER,OAAO,CAACO,QAAQ;MAAEE,GAAG,EAAC;;0DAI7DtB,mBAAA,CASO;IATDJ,KAAK,EAAC,WAAW;IAAE2B,QAAM,EAAApB,MAAA,QAAAA,MAAA,MAAAqB,cAAA,KAAAC,IAAA,KAAUd,MAAA,CAAAe,YAAA,IAAAf,MAAA,CAAAe,YAAA,IAAAD,IAAA,CAAY;MACnDzB,mBAAA,CAME;IALAH,GAAG,EAAC,cAAc;IAClB8B,IAAI,EAAC,MAAM;IACXC,MAAM,EAAC,SAAS;IAChBC,QAAQ,EAAR,EAAQ;IACPC,QAAM,EAAA3B,MAAA,QAAAA,MAAA,UAAAsB,IAAA,KAAEd,MAAA,CAAAoB,gBAAA,IAAApB,MAAA,CAAAoB,gBAAA,IAAAN,IAAA,CAAgB;kDAE3BzB,mBAAA,CAA6D;IAArD2B,IAAI,EAAC,QAAQ;IAAEK,QAAQ,GAAGrB,MAAA,CAAAsB;KAAc,MAAI,iBAAAC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}