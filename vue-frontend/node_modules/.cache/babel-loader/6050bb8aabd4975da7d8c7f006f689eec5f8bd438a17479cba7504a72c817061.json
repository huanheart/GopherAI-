{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withModifiers as _withModifiers, withKeys as _withKeys } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ai-chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"session-list\"\n};\nconst _hoisted_3 = {\n  class: \"session-list-header\"\n};\nconst _hoisted_4 = {\n  class: \"session-list-ul\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"chat-section\"\n};\nconst _hoisted_7 = {\n  class: \"top-bar\"\n};\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = {\n  class: \"chat-messages\",\n  ref: \"messagesRef\"\n};\nconst _hoisted_10 = {\n  class: \"message-header\"\n};\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = [\"innerHTML\"];\nconst _hoisted_13 = {\n  class: \"chat-input\"\n};\nconst _hoisted_14 = [\"disabled\"];\nconst _hoisted_15 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 左侧会话列表 \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"span\", null, \"会话列表\", -1 /* CACHED */)), _createElementVNode(\"button\", {\n    class: \"new-chat-btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.createNewSession && _ctx.createNewSession(...args))\n  }, \"＋ 新聊天\")]), _createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.sessions, session => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: session.id,\n      class: _normalizeClass(['session-item', {\n        active: _ctx.currentSessionId === session.id\n      }]),\n      onClick: $event => _ctx.switchSession(session.id)\n    }, _toDisplayString(session.name || `会话 ${session.id}`), 11 /* TEXT, CLASS, PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" 右侧聊天区域 \"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    class: \"back-btn\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$router.push('/menu'))\n  }, \"← 返回\"), _createElementVNode(\"button\", {\n    class: \"sync-btn\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.syncHistory && _ctx.syncHistory(...args)),\n    disabled: !_ctx.currentSessionId || _ctx.tempSession\n  }, \"同步历史数据\", 8 /* PROPS */, _hoisted_8), _cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"modelType\"\n  }, \"选择模型：\", -1 /* CACHED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"modelType\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.selectedModel = $event),\n    class: \"model-select\"\n  }, [...(_cache[8] || (_cache[8] = [_createElementVNode(\"option\", {\n    value: \"1\"\n  }, \"阿里百炼\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"2\"\n  }, \"豆包\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"3\"\n  }, \"百炼RAG\", -1 /* CACHED */), _createElementVNode(\"option\", {\n    value: \"4\"\n  }, \"阿里百炼MCP\", -1 /* CACHED */)]))], 512 /* NEED_PATCH */), [[_vModelSelect, _ctx.selectedModel]])]), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.currentMessages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['message', message.role === 'user' ? 'user-message' : 'ai-message'])\n    }, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"b\", null, _toDisplayString(message.role === 'user' ? '你' : 'AI') + \":\", 1 /* TEXT */), message.role === 'assistant' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"tts-btn\",\n      onClick: $event => _ctx.playTTS(message.content)\n    }, \"🔊\", 8 /* PROPS */, _hoisted_11)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", {\n      class: \"message-content\",\n      innerHTML: _ctx.renderMarkdown(message.content)\n    }, null, 8 /* PROPS */, _hoisted_12)], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_13, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.inputMessage = $event),\n    placeholder: \"请输入你的问题...\",\n    onKeydown: _cache[5] || (_cache[5] = _withKeys(_withModifiers((...args) => $setup.sendMessage && $setup.sendMessage(...args), [\"exact\", \"prevent\"]), [\"enter\"])),\n    disabled: $setup.loading,\n    ref: \"messageInput\",\n    rows: \"1\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_14), [[_vModelText, $setup.inputMessage]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    disabled: !$setup.inputMessage.trim() || $setup.loading,\n    onClick: _cache[6] || (_cache[6] = (...args) => $setup.sendMessage && $setup.sendMessage(...args)),\n    class: \"send-btn\"\n  }, _toDisplayString($setup.loading ? '发送中...' : '发送'), 9 /* TEXT, PROPS */, _hoisted_15)])])]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","onClick","_cache","args","_ctx","createNewSession","_hoisted_4","_Fragment","_renderList","sessions","session","key","id","_normalizeClass","active","currentSessionId","$event","switchSession","name","_hoisted_5","_hoisted_6","_hoisted_7","$router","push","syncHistory","disabled","tempSession","_hoisted_8","for","selectedModel","value","_hoisted_9","currentMessages","message","index","role","_hoisted_10","_toDisplayString","playTTS","content","_hoisted_11","innerHTML","renderMarkdown","_hoisted_13","$setup","inputMessage","placeholder","onKeydown","_withKeys","_withModifiers","sendMessage","loading","rows","type","trim","_hoisted_15"],"sources":["/root/GopherAI/GopherAI-/vue-frontend/src/views/AIChat.vue"],"sourcesContent":["<template>\n  <div class=\"ai-chat-container\">\n    <!-- 左侧会话列表 -->\n    <div class=\"session-list\">\n      <div class=\"session-list-header\">\n        <span>会话列表</span>\n        <button class=\"new-chat-btn\" @click=\"createNewSession\">＋ 新聊天</button>\n      </div>\n      <ul class=\"session-list-ul\">\n        <li\n          v-for=\"session in sessions\"\n          :key=\"session.id\"\n          :class=\"['session-item', { active: currentSessionId === session.id }]\"\n          @click=\"switchSession(session.id)\"\n        >\n          {{ session.name || `会话 ${session.id}` }}\n        </li>\n      </ul>\n    </div>\n\n    <!-- 右侧聊天区域 -->\n    <div class=\"chat-section\">\n      <div class=\"top-bar\">\n        <button class=\"back-btn\" @click=\"$router.push('/menu')\">← 返回</button>\n        <button class=\"sync-btn\" @click=\"syncHistory\" :disabled=\"!currentSessionId || tempSession\">同步历史数据</button>\n        <label for=\"modelType\">选择模型：</label>\n        <select id=\"modelType\" v-model=\"selectedModel\" class=\"model-select\">\n          <option value=\"1\">阿里百炼</option>\n          <option value=\"2\">豆包</option>\n          <option value=\"3\">百炼RAG</option>\n          <option value=\"4\">阿里百炼MCP</option>\n        </select>\n      </div>\n\n      <div class=\"chat-messages\" ref=\"messagesRef\">\n        <div\n          v-for=\"(message, index) in currentMessages\"\n          :key=\"index\"\n          :class=\"['message', message.role === 'user' ? 'user-message' : 'ai-message']\"\n        >\n          <div class=\"message-header\">\n            <b>{{ message.role === 'user' ? '你' : 'AI' }}:</b>\n            <button v-if=\"message.role === 'assistant'\" class=\"tts-btn\" @click=\"playTTS(message.content)\">🔊</button>\n          </div>\n          <div class=\"message-content\" v-html=\"renderMarkdown(message.content)\"></div>\n        </div>\n      </div>\n\n      <div class=\"chat-input\">\n        <textarea\n          v-model=\"inputMessage\"\n          placeholder=\"请输入你的问题...\"\n          @keydown.enter.exact.prevent=\"sendMessage\"\n          :disabled=\"loading\"\n          ref=\"messageInput\"\n          rows=\"1\"\n        ></textarea>\n        <button\n          type=\"button\"\n          :disabled=\"!inputMessage.trim() || loading\"\n          @click=\"sendMessage\"\n          class=\"send-btn\"\n        >\n          {{ loading ? '发送中...' : '发送' }}\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, nextTick } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport api from '../utils/api'\n\nexport default {\n  name: 'AIChat',\n  setup() {\n    const messages = ref([])\n    const inputMessage = ref('')\n    const loading = ref(false)\n    const messagesRef = ref()\n\n    const sendMessage = async () => {\n      if (!inputMessage.value.trim()) {\n        ElMessage.warning('请输入消息内容')\n        return\n      }\n\n      const userMessage = {\n        role: 'user',\n        content: inputMessage.value\n      }\n      messages.value.push(userMessage)\n      const currentInput = inputMessage.value\n      inputMessage.value = ''\n\n      try {\n        loading.value = true\n        const response = await api.post('/ai/chat', { message: currentInput })\n        if (response.data.status_code === 1000) {\n          const aiMessage = {\n            role: 'ai',\n            content: response.data.response\n          }\n          messages.value.push(aiMessage)\n          await nextTick()\n          scrollToBottom()\n        } else {\n          ElMessage.error(response.data.status_msg || '发送失败')\n        }\n      } catch (error) {\n        console.error('Send message error:', error)\n        ElMessage.error('发送失败，请重试')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    const scrollToBottom = () => {\n      if (messagesRef.value) {\n        messagesRef.value.scrollTop = messagesRef.value.scrollHeight\n      }\n    }\n\n    return {\n      messages,\n      inputMessage,\n      loading,\n      messagesRef,\n      sendMessage\n    }\n  }\n}\n</script>\n\n<style scoped>\n.ai-chat-container {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n}\n\n.header {\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  color: #2c3e50;\n  display: flex;\n  align-items: center;\n  padding: 0 30px;\n  box-shadow: 0 2px 20px rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  position: relative;\n  z-index: 2;\n}\n\n.header h2 {\n  margin: 0 0 0 20px;\n  font-size: 24px;\n  font-weight: 600;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.el-button {\n  transition: all 0.3s ease;\n}\n\n.el-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 8px 25px rgba(64, 158, 255, 0.3);\n}\n\n.main {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n}\n\n.chat-messages {\n  flex: 1;\n  overflow-y: auto;\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  scroll-behavior: smooth;\n}\n\n.chat-messages::-webkit-scrollbar {\n  width: 6px;\n}\n\n.chat-messages::-webkit-scrollbar-track {\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 3px;\n}\n\n.chat-messages::-webkit-scrollbar-thumb {\n  background: rgba(102, 126, 234, 0.3);\n  border-radius: 3px;\n}\n\n.chat-messages::-webkit-scrollbar-thumb:hover {\n  background: rgba(102, 126, 234, 0.5);\n}\n\n.message {\n  max-width: 70%;\n  padding: 16px 20px;\n  border-radius: 20px;\n  word-wrap: break-word;\n  animation: messageSlideIn 0.4s ease-out;\n  position: relative;\n}\n\n@keyframes messageSlideIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px) scale(0.95);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0) scale(1);\n  }\n}\n\n.user-message {\n  align-self: flex-end;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  box-shadow: 0 4px 20px rgba(102, 126, 234, 0.3);\n  position: relative;\n}\n\n.user-message::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  right: 20px;\n  width: 0;\n  height: 0;\n  border-left: 8px solid transparent;\n  border-right: 8px solid transparent;\n  border-top: 8px solid #764ba2;\n}\n\n.ai-message {\n  align-self: flex-start;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  color: #2c3e50;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  position: relative;\n}\n\n.ai-message::after {\n  content: '';\n  position: absolute;\n  bottom: -2px;\n  left: 20px;\n  width: 0;\n  height: 0;\n  border-left: 8px solid transparent;\n  border-right: 8px solid transparent;\n  border-top: 8px solid rgba(255, 255, 255, 0.95);\n}\n\n.message-content p {\n  margin: 0;\n  line-height: 1.6;\n  font-size: 15px;\n}\n\n.chat-input {\n  padding: 30px;\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(10px);\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n  position: relative;\n}\n\n.el-input {\n  border-radius: 25px;\n  overflow: hidden;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.el-input:hover {\n  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);\n}\n\n.el-input:focus-within {\n  box-shadow: 0 8px 30px rgba(102, 126, 234, 0.2);\n  transform: translateY(-2px);\n}\n\n.el-input__inner {\n  border: none;\n  border-radius: 25px;\n  padding: 0 20px;\n  height: 50px;\n  font-size: 16px;\n}\n\n.el-input__inner:focus {\n  box-shadow: none;\n}\n\n.el-input__suffix {\n  right: 8px;\n}\n\n.el-button {\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  padding: 0;\n  border: none;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  transition: all 0.3s ease;\n}\n\n.el-button:hover {\n  transform: scale(1.1);\n  box-shadow: 0 4px 20px rgba(102, 126, 234, 0.4);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}