{"ast":null,"code":"import { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport api from '../utils/api';\nexport default {\n  name: 'LoginView',\n  setup() {\n    const router = useRouter();\n    const loginFormRef = ref();\n    const loading = ref(false);\n    const loginForm = ref({\n      email: '',\n      password: ''\n    });\n    const loginRules = {\n      email: [{\n        required: true,\n        message: '请输入邮箱',\n        trigger: 'blur'\n      }, {\n        type: 'email',\n        message: '请输入正确的邮箱格式',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        message: '密码长度不能少于6位',\n        trigger: 'blur'\n      }]\n    };\n    const handleLogin = async () => {\n      try {\n        await loginFormRef.value.validate();\n        loading.value = true;\n        const response = await api.post('/user/login', loginForm.value);\n        if (response.data.code === 200) {\n          localStorage.setItem('token', response.data.data.token);\n          ElMessage.success('登录成功');\n          router.push('/menu');\n        } else {\n          ElMessage.error(response.data.message || '登录失败');\n        }\n      } catch (error) {\n        console.error('Login error:', error);\n        ElMessage.error('登录失败，请重试');\n      } finally {\n        loading.value = false;\n      }\n    };\n    return {\n      loginFormRef,\n      loading,\n      loginForm,\n      loginRules,\n      handleLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","useRouter","ElMessage","api","name","setup","router","loginFormRef","loading","loginForm","email","password","loginRules","required","message","trigger","type","min","handleLogin","value","validate","response","post","data","code","localStorage","setItem","token","success","push","error","console"],"sources":["/root/GopherAI/GopherAI-/vue-frontend/src/views/Login.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <el-card class=\"login-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <h2>登录</h2>\n        </div>\n      </template>\n      <el-form\n        ref=\"loginFormRef\"\n        :model=\"loginForm\"\n        :rules=\"loginRules\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input\n            v-model=\"loginForm.email\"\n            placeholder=\"请输入邮箱\"\n            type=\"email\"\n          />\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            placeholder=\"请输入密码\"\n            type=\"password\"\n            show-password\n          />\n        </el-form-item>\n        <el-form-item>\n          <el-button\n            type=\"primary\"\n            :loading=\"loading\"\n            @click=\"handleLogin\"\n            style=\"width: 100%\"\n          >\n            登录\n          </el-button>\n        </el-form-item>\n        <el-form-item>\n          <el-button\n            type=\"text\"\n            @click=\"$router.push('/register')\"\n            style=\"width: 100%\"\n          >\n            还没有账号？去注册\n          </el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport api from '../utils/api'\n\nexport default {\n  name: 'LoginView',\n  setup() {\n    const router = useRouter()\n    const loginFormRef = ref()\n    const loading = ref(false)\n    const loginForm = ref({\n      email: '',\n      password: ''\n    })\n\n    const loginRules = {\n      email: [\n        { required: true, message: '请输入邮箱', trigger: 'blur' },\n        { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\n      ],\n      password: [\n        { required: true, message: '请输入密码', trigger: 'blur' },\n        { min: 6, message: '密码长度不能少于6位', trigger: 'blur' }\n      ]\n    }\n\n    const handleLogin = async () => {\n      try {\n        await loginFormRef.value.validate()\n        loading.value = true\n        const response = await api.post('/user/login', loginForm.value)\n        if (response.data.code === 200) {\n          localStorage.setItem('token', response.data.data.token)\n          ElMessage.success('登录成功')\n          router.push('/menu')\n        } else {\n          ElMessage.error(response.data.message || '登录失败')\n        }\n      } catch (error) {\n        console.error('Login error:', error)\n        ElMessage.error('登录失败，请重试')\n      } finally {\n        loading.value = false\n      }\n    }\n\n    return {\n      loginFormRef,\n      loading,\n      loginForm,\n      loginRules,\n      handleLogin\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n\n.login-card {\n  width: 400px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n}\n\n.card-header {\n  text-align: center;\n}\n\n.card-header h2 {\n  margin: 0;\n  color: #409eff;\n}\n</style>"],"mappings":"AAsDA,SAASA,GAAE,QAAS,KAAI;AACxB,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,SAAQ,QAAS,cAAa;AACvC,OAAOC,GAAE,MAAO,cAAa;AAE7B,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIL,SAAS,CAAC;IACzB,MAAMM,YAAW,GAAIP,GAAG,CAAC;IACzB,MAAMQ,OAAM,GAAIR,GAAG,CAAC,KAAK;IACzB,MAAMS,SAAQ,GAAIT,GAAG,CAAC;MACpBU,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;IAED,MAAMC,UAAS,GAAI;MACjBF,KAAK,EAAE,CACL;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,EACrD;QAAEC,IAAI,EAAE,OAAO;QAAEF,OAAO,EAAE,YAAY;QAAEC,OAAO,EAAE;MAAO,EACzD;MACDJ,QAAQ,EAAE,CACR;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,EACrD;QAAEE,GAAG,EAAE,CAAC;QAAEH,OAAO,EAAE,YAAY;QAAEC,OAAO,EAAE;MAAO;IAErD;IAEA,MAAMG,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMX,YAAY,CAACY,KAAK,CAACC,QAAQ,CAAC;QAClCZ,OAAO,CAACW,KAAI,GAAI,IAAG;QACnB,MAAME,QAAO,GAAI,MAAMlB,GAAG,CAACmB,IAAI,CAAC,aAAa,EAAEb,SAAS,CAACU,KAAK;QAC9D,IAAIE,QAAQ,CAACE,IAAI,CAACC,IAAG,KAAM,GAAG,EAAE;UAC9BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACI,KAAK;UACtDzB,SAAS,CAAC0B,OAAO,CAAC,MAAM;UACxBtB,MAAM,CAACuB,IAAI,CAAC,OAAO;QACrB,OAAO;UACL3B,SAAS,CAAC4B,KAAK,CAACT,QAAQ,CAACE,IAAI,CAACT,OAAM,IAAK,MAAM;QACjD;MACF,EAAE,OAAOgB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK;QACnC5B,SAAS,CAAC4B,KAAK,CAAC,UAAU;MAC5B,UAAU;QACRtB,OAAO,CAACW,KAAI,GAAI,KAAI;MACtB;IACF;IAEA,OAAO;MACLZ,YAAY;MACZC,OAAO;MACPC,SAAS;MACTG,UAAU;MACVM;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}