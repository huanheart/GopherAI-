{"ast":null,"code":"import { ref, nextTick } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport api from '../utils/api';\nexport default {\n  name: 'ImageRecognition',\n  setup() {\n    const messages = ref([]);\n    const selectedFile = ref(null);\n    const fileInputRef = ref();\n    const chatContainerRef = ref();\n    const handleFileSelect = event => {\n      selectedFile.value = event.target.files[0];\n    };\n    const handleSubmit = async () => {\n      if (!selectedFile.value) return;\n      const file = selectedFile.value;\n      const reader = new FileReader();\n      reader.onload = async function (event) {\n        const base64Url = event.target.result;\n        const base64Data = base64Url.split(',')[1];\n\n        // 添加用户消息\n        messages.value.push({\n          role: 'user',\n          content: `已上传图片: ${file.name}`,\n          imageUrl: base64Url\n        });\n        await nextTick();\n        scrollToBottom();\n        try {\n          const response = await api.post('/upload/send', {\n            filename: file.name,\n            image: base64Data\n          });\n          if (response.data.status_code === 1000) {\n            const aiText = `识别结果: ${response.data.class_name} (置信度: ${Math.round(response.data.confidence * 100)}%)`;\n            messages.value.push({\n              role: 'assistant',\n              content: aiText\n            });\n          } else {\n            messages.value.push({\n              role: 'assistant',\n              content: `[错误] ${response.data.status_msg || '识别失败'}`\n            });\n          }\n        } catch (error) {\n          console.error('Upload error:', error);\n          messages.value.push({\n            role: 'assistant',\n            content: `[错误] 无法连接到服务器或上传失败: ${error.message}`\n          });\n        }\n        await nextTick();\n        scrollToBottom();\n\n        // 清空文件输入\n        selectedFile.value = null;\n        if (fileInputRef.value) {\n          fileInputRef.value.value = '';\n        }\n      };\n      reader.readAsDataURL(file);\n    };\n    const scrollToBottom = () => {\n      if (chatContainerRef.value) {\n        chatContainerRef.value.scrollTop = chatContainerRef.value.scrollHeight;\n      }\n    };\n    return {\n      messages,\n      selectedFile,\n      fileInputRef,\n      chatContainerRef,\n      handleFileSelect,\n      handleSubmit\n    };\n  }\n};","map":{"version":3,"names":["ref","nextTick","ElMessage","api","name","setup","messages","selectedFile","fileInputRef","chatContainerRef","handleFileSelect","event","value","target","files","handleSubmit","file","reader","FileReader","onload","base64Url","result","base64Data","split","push","role","content","imageUrl","scrollToBottom","response","post","filename","image","data","status_code","aiText","class_name","Math","round","confidence","status_msg","error","console","message","readAsDataURL","scrollTop","scrollHeight"],"sources":["/root/GopherAI/GopherAI-/vue-frontend/src/views/ImageRecognition.vue"],"sourcesContent":["<template>\n  <div class=\"image-recognition-container\">\n    <div class=\"top-bar\">\n      <button class=\"back-btn\" @click=\"$router.push('/menu')\">← 返回</button>\n      <h2>AI 图像识别助手</h2>\n    </div>\n\n    <div class=\"chat-container\" ref=\"chatContainerRef\">\n      <div\n        v-for=\"(message, index) in messages\"\n        :key=\"index\"\n        :class=\"['message', message.role === 'user' ? 'user' : 'assistant']\"\n      >\n        <b>{{ message.role === 'user' ? '你' : 'AI' }}:</b>\n        <span>{{ message.content }}</span>\n        <img v-if=\"message.imageUrl\" :src=\"message.imageUrl\" alt=\"上传的图片\" />\n      </div>\n    </div>\n\n    <form class=\"input-box\" @submit.prevent=\"handleSubmit\">\n      <input\n        ref=\"fileInputRef\"\n        type=\"file\"\n        accept=\"image/*\"\n        required\n        @change=\"handleFileSelect\"\n      />\n      <button type=\"submit\" :disabled=\"!selectedFile\">发送图片</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport { ref, nextTick } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport api from '../utils/api'\n\nexport default {\n  name: 'ImageRecognition',\n  setup() {\n    const messages = ref([])\n    const selectedFile = ref(null)\n    const fileInputRef = ref()\n    const chatContainerRef = ref()\n\n    const handleFileSelect = (event) => {\n      selectedFile.value = event.target.files[0]\n    }\n\n    const handleSubmit = async () => {\n      if (!selectedFile.value) return\n\n      const file = selectedFile.value\n      const reader = new FileReader()\n\n      reader.onload = async function(event) {\n        const base64Url = event.target.result\n        const base64Data = base64Url.split(',')[1]\n\n        // 添加用户消息\n        messages.value.push({\n          role: 'user',\n          content: `已上传图片: ${file.name}`,\n          imageUrl: base64Url\n        })\n\n        await nextTick()\n        scrollToBottom()\n\n        try {\n          const response = await api.post('/upload/send', {\n            filename: file.name,\n            image: base64Data\n          })\n\n          if (response.data.status_code === 1000) {\n            const aiText = `识别结果: ${response.data.class_name} (置信度: ${Math.round(response.data.confidence * 100)}%)`\n            messages.value.push({\n              role: 'assistant',\n              content: aiText\n            })\n          } else {\n            messages.value.push({\n              role: 'assistant',\n              content: `[错误] ${response.data.status_msg || '识别失败'}`\n            })\n          }\n        } catch (error) {\n          console.error('Upload error:', error)\n          messages.value.push({\n            role: 'assistant',\n            content: `[错误] 无法连接到服务器或上传失败: ${error.message}`\n          })\n        }\n\n        await nextTick()\n        scrollToBottom()\n\n        // 清空文件输入\n        selectedFile.value = null\n        if (fileInputRef.value) {\n          fileInputRef.value.value = ''\n        }\n      }\n\n      reader.readAsDataURL(file)\n    }\n\n    const scrollToBottom = () => {\n      if (chatContainerRef.value) {\n        chatContainerRef.value.scrollTop = chatContainerRef.value.scrollHeight\n      }\n    }\n\n    return {\n      messages,\n      selectedFile,\n      fileInputRef,\n      chatContainerRef,\n      handleFileSelect,\n      handleSubmit\n    }\n  }\n}\n</script>\n\n<style scoped>\n.image-recognition-container {\n  font-family: \"Microsoft YaHei\", Arial, sans-serif;\n  background: linear-gradient(135deg, #1f1c2c, #928dab);\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  color: #fff;\n}\n\n.top-bar {\n  padding: 12px 20px;\n  background: rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(6px);\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid rgba(255,255,255,0.2);\n}\n\n.back-btn {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 8px;\n  background: #00c3ff;\n  color: #fff;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: bold;\n  box-shadow: 0 0 8px #00c3ff;\n  transition: all 0.3s ease;\n}\n\n.back-btn:hover {\n  background: #00e1ff;\n  box-shadow: 0 0 15px #00e1ff;\n  transform: scale(1.05);\n}\n\n.top-bar h2 {\n  margin: 0 0 0 20px;\n  font-size: 20px;\n  font-weight: 600;\n}\n\n.chat-container {\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  background: rgba(0,0,0,0.3);\n  backdrop-filter: blur(6px);\n}\n\n.message {\n  max-width: 70%;\n  padding: 12px 16px;\n  border-radius: 12px;\n  line-height: 1.5;\n  word-wrap: break-word;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.3);\n  position: relative;\n  animation: fadeIn 0.3s ease;\n}\n\n.user {\n  background: #00c3ff;\n  color: white;\n  align-self: flex-end;\n  border-bottom-right-radius: 0;\n}\n\n.assistant {\n  background: rgba(255,255,255,0.9);\n  color: #111;\n  align-self: flex-start;\n  border-bottom-left-radius: 0;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.message img {\n  max-width: 200px;\n  border-radius: 8px;\n  display: block;\n  margin-top: 8px;\n  box-shadow: 0 2px 6px rgba(0,0,0,0.3);\n}\n\n.input-box {\n  display: flex;\n  padding: 12px 20px;\n  background: rgba(0,0,0,0.5);\n  backdrop-filter: blur(6px);\n  border-top: 1px solid rgba(255,255,255,0.2);\n  gap: 12px;\n}\n\n.input-box input[type=\"file\"] {\n  flex: 1;\n  border-radius: 8px;\n  border: 1px solid #ccc;\n  padding: 6px 10px;\n  background: rgba(255,255,255,0.1);\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.input-box input[type=\"file\"]::file-selector-button {\n  border: none;\n  background: #00c3ff;\n  padding: 6px 12px;\n  border-radius: 6px;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0 0 6px #00c3ff;\n  transition: all 0.3s ease;\n}\n\n.input-box input[type=\"file\"]::file-selector-button:hover {\n  background: #00e1ff;\n  box-shadow: 0 0 12px #00e1ff;\n}\n\n.input-box button {\n  padding: 0 20px;\n  border: none;\n  border-radius: 8px;\n  background: #00c3ff;\n  color: white;\n  font-size: 14px;\n  cursor: pointer;\n  font-weight: bold;\n  box-shadow: 0 0 8px #00c3ff;\n  transition: all 0.3s ease;\n}\n\n.input-box button:hover {\n  background: #00e1ff;\n  box-shadow: 0 0 15px #00e1ff;\n  transform: scale(1.05);\n}\n\n.input-box button:disabled {\n  background: #ccc;\n  box-shadow: none;\n  cursor: not-allowed;\n  transform: none;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}